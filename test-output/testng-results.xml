<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="2" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-07-27T14:31:13 IST" name="Suite" finished-at="2022-07-27T14:31:41 IST" duration-ms="28031">
    <groups>
    </groups>
    <test started-at="2022-07-27T14:31:13 IST" name="Test" finished-at="2022-07-27T14:31:41 IST" duration-ms="28031">
      <class name="TestClasses.VerifyUserCanLogIn">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:TestClasses.VerifyUserCanLogIn@1a6d8329]" started-at="2022-07-27T14:31:13 IST" name="beforeClass" finished-at="2022-07-27T14:31:27 IST" duration-ms="13920" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:TestClasses.VerifyUserCanLogIn@1a6d8329]" started-at="2022-07-27T14:31:27 IST" name="beforeMethod" finished-at="2022-07-27T14:31:27 IST" duration-ms="154" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUserCanLogin()[pri:0, instance:TestClasses.VerifyUserCanLogIn@1a6d8329]" started-at="2022-07-27T14:31:27 IST" name="verifyUserCanLogin" finished-at="2022-07-27T14:31:31 IST" duration-ms="3950" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCanLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestClasses.VerifyUserCanLogIn@1a6d8329]" started-at="2022-07-27T14:31:31 IST" name="afterMethod" finished-at="2022-07-27T14:31:31 IST" duration-ms="55" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserCanLogin status=SUCCESS method=VerifyUserCanLogIn.verifyUserCanLogin()[pri:0, instance:TestClasses.VerifyUserCanLogIn@1a6d8329] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:TestClasses.VerifyUserCanLogIn@1a6d8329]" started-at="2022-07-27T14:31:31 IST" name="afterClass" finished-at="2022-07-27T14:31:32 IST" duration-ms="1673" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- TestClasses.VerifyUserCanLogIn -->
      <class name="TestClasses.VerifyUserCanAddNewAddress">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:TestClasses.VerifyUserCanAddNewAddress@2892d68]" started-at="2022-07-27T14:31:32 IST" name="beforeClass" finished-at="2022-07-27T14:31:32 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:TestClasses.VerifyUserCanAddNewAddress@2892d68]" started-at="2022-07-27T14:31:32 IST" name="beforeMethod" finished-at="2022-07-27T14:31:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUserCanGoToProfilePage()[pri:0, instance:TestClasses.VerifyUserCanAddNewAddress@2892d68]" started-at="2022-07-27T14:31:32 IST" name="verifyUserCanGoToProfilePage" finished-at="2022-07-27T14:31:36 IST" duration-ms="3034" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCanGoToProfilePage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestClasses.VerifyUserCanAddNewAddress@2892d68]" started-at="2022-07-27T14:31:36 IST" name="afterMethod" finished-at="2022-07-27T14:31:36 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserCanGoToProfilePage status=SUCCESS method=VerifyUserCanAddNewAddress.verifyUserCanGoToProfilePage()[pri:0, instance:TestClasses.VerifyUserCanAddNewAddress@2892d68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:TestClasses.VerifyUserCanAddNewAddress@2892d68]" started-at="2022-07-27T14:31:36 IST" name="beforeMethod" finished-at="2022-07-27T14:31:36 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="veryUserCanAddAddress()[pri:1, instance:TestClasses.VerifyUserCanAddNewAddress@2892d68]" started-at="2022-07-27T14:31:36 IST" name="veryUserCanAddAddress" finished-at="2022-07-27T14:31:40 IST" duration-ms="4514" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [4] but found [3]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [4] but found [3]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:1240)
at org.testng.Assert.assertEquals(Assert.java:1274)
at TestClasses.VerifyUserCanAddNewAddress.veryUserCanAddAddress(VerifyUserCanAddNewAddress.java:79)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- veryUserCanAddAddress -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestClasses.VerifyUserCanAddNewAddress@2892d68]" started-at="2022-07-27T14:31:40 IST" name="afterMethod" finished-at="2022-07-27T14:31:40 IST" duration-ms="324" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=veryUserCanAddAddress status=FAILURE method=VerifyUserCanAddNewAddress.veryUserCanAddAddress()[pri:1, instance:TestClasses.VerifyUserCanAddNewAddress@2892d68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:TestClasses.VerifyUserCanAddNewAddress@2892d68]" started-at="2022-07-27T14:31:40 IST" name="afterClass" finished-at="2022-07-27T14:31:41 IST" duration-ms="166" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- TestClasses.VerifyUserCanAddNewAddress -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
